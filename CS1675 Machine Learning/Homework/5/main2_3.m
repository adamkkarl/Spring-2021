function main2_3()
%note, function predict_NB is dependent on global params generated by main2_2
    train = readmatrix("pima_train.txt");
    test = readmatrix("pima_test.txt");
    
    class_1 = [];
    class_0 = [];
    
    for i=1:size(train, 1)
        if train(i,9) == 1
            class_1 = [class_1; train(i,:)];
        else
            class_0 = [class_0; train(i,:)];
        end
    end
    
    p_y_is_0 = size(class_0, 1)/size(train, 1);
    
    
    train_exp_pred_y = [];
    train_norm_pred_y = [];

    for i=1:size(train,1)
        [exp_pred, norm_pred] = predict_NB(train(i,1:8), p_y_is_0);
        train_exp_pred_y = [train_exp_pred_y; exp_pred];
        train_norm_pred_y = [train_norm_pred_y; norm_pred];
    end
    
    disp("=====TRAINING=====");
    train_exp_conf_mat = confusionmat(train_exp_pred_y, train(:,9));
    train_exp_conf_mat = train_exp_conf_mat / size(train,1);
    disp("training exp confusion matrix:")
    disp(train_exp_conf_mat);
    
    train_exp_E = train_exp_conf_mat(2,1) + train_exp_conf_mat(1,2);
    disp("training exp misclassification error")
    disp(train_exp_E);
    
    train_norm_conf_mat = confusionmat(train_norm_pred_y, train(:,9));
    train_norm_conf_mat = train_norm_conf_mat / size(train,1);
    disp("training norm confusion matrix:")
    disp(train_norm_conf_mat);
    
    train_norm_E = train_norm_conf_mat(2,1) + train_norm_conf_mat(1,2);
    disp("training norm misclassification error")
    disp(train_norm_E);
    
    
    
    
    
    
    test_exp_pred_y = [];
    test_norm_pred_y = [];

    for i=1:size(test,1)
        [e, n] = predict_NB(test(i,1:8), p_y_is_0);
        test_exp_pred_y = [test_exp_pred_y; e];
        test_norm_pred_y = [test_norm_pred_y; n];
    end
    
    disp("=====TESTING=====");
    test_exp_conf_mat = confusionmat(test_exp_pred_y, test(:,9));
    test_exp_conf_mat = test_exp_conf_mat / size(test,1);
    disp("testing exp confusion matrix:")
    disp(test_exp_conf_mat);
    
    test_exp_E = test_exp_conf_mat(2,1) + test_exp_conf_mat(1,2);
    disp("testing exp misclassification error")
    disp(test_exp_E);
    
    exp_sens = test_exp_conf_mat(1,1) / (test_exp_conf_mat(1,1) + test_exp_conf_mat(2,1));
    disp("testing exp sensitivity");
    disp(exp_sens);
    
    exp_spec = test_exp_conf_mat(2,2) / (test_exp_conf_mat(2,2) + test_exp_conf_mat(1,2));
    disp("testing exp specificity");
    disp(exp_spec);
    
    
    
    test_norm_conf_mat = confusionmat(test_norm_pred_y, test(:,9));
    test_norm_conf_mat = test_norm_conf_mat / size(test,1);
    disp("testing norm confusion matrix:")
    disp(test_norm_conf_mat);
    
    test_norm_E = test_norm_conf_mat(2,1) + test_norm_conf_mat(1,2);
    disp("testing norm misclassification error")
    disp(test_norm_E);
    
    norm_sens = test_norm_conf_mat(1,1) / (test_norm_conf_mat(1,1) + test_norm_conf_mat(2,1));
    disp("testing norm sensitivity");
    disp(norm_sens);
    
    norm_spec = test_norm_conf_mat(2,2) / (test_norm_conf_mat(2,2) + test_norm_conf_mat(1,2));
    disp("testing norm specificity");
    disp(norm_spec);
    
end